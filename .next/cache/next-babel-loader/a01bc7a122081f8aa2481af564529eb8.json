{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { HYDRATE } from 'next-redux-wrapper';\nimport user from './user';\nimport post from './post';\nimport { combineReducers } from 'redux';\n\n// (이전상태, 액션) => 다음상태를 만들어내는 함수\nvar rootReducer = combineReducers({\n  index: function index() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    switch (action.type) {\n      case HYDRATE:\n        return _objectSpread(_objectSpread({}, state), action.payload);\n      default:\n        return state;\n    }\n  },\n  user: user,\n  post: post\n});\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","user","post","combineReducers","rootReducer","index","state","action","type","payload"],"sources":["C:/Users/seobo/Desktop/nodebird/prepare/front/reducers/index.js"],"sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\r\n\r\nimport user from './user';\r\nimport post from './post';\r\nimport { combineReducers } from 'redux';\r\n\r\n// (이전상태, 액션) => 다음상태를 만들어내는 함수\r\nconst rootReducer = combineReducers ({\r\n    index: (state = {}, action) => {\r\n    switch(action.type) {\r\n        case HYDRATE:\r\n            return {\r\n                ...state, \r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n        }\r\n    },\r\n    user,\r\n    post,\r\n});\r\n\r\nexport default rootReducer;\r\n"],"mappings":";;;AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAE5C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,eAAe,QAAQ,OAAO;;AAEvC;AACA,IAAMC,WAAW,GAAGD,eAAe,CAAE;EACjCE,KAAK,EAAE,iBAAwB;IAAA,IAAvBC,KAAK,uEAAG,CAAC,CAAC;IAAA,IAAEC,MAAM;IAC1B,QAAOA,MAAM,CAACC,IAAI;MACd,KAAKR,OAAO;QACR,uCACOM,KAAK,GACLC,MAAM,CAACE,OAAO;MAEzB;QACI,OAAOH,KAAK;IAAC;EAErB,CAAC;EACDL,IAAI,EAAJA,IAAI;EACJC,IAAI,EAAJA;AACJ,CAAC,CAAC;AAEF,eAAeE,WAAW"},"metadata":{},"sourceType":"module"}